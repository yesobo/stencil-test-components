/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { StHeader as StHeader } from './components/st-header/st-header';

interface HTMLStHeaderElement extends StHeader, HTMLElement {
}
declare var HTMLStHeaderElement: {
  prototype: HTMLStHeaderElement;
  new (): HTMLStHeaderElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "st-header": HTMLStHeaderElement;
  }
  interface ElementTagNameMap {
      "st-header": HTMLStHeaderElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "st-header": JSXElements.StHeaderAttributes;
      }
  }
  namespace JSXElements {
      export interface StHeaderAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          title?: string,
          last?: string
      }
  }
}

import { StInput as StInput } from './components/st-input/st-input';

interface HTMLStInputElement extends StInput, HTMLElement {
}
declare var HTMLStInputElement: {
  prototype: HTMLStInputElement;
  new (): HTMLStInputElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "st-input": HTMLStInputElement;
  }
  interface ElementTagNameMap {
      "st-input": HTMLStInputElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "st-input": JSXElements.StInputAttributes;
      }
  }
  namespace JSXElements {
      export interface StInputAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          value?: string,
          last?: string
      }
  }
}

